(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{336:function(s,t,a){"use strict";a.r(t);var e=a(33),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"使用python操作mysql数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用python操作mysql数据库"}},[s._v("#")]),s._v(" 使用python操作mysql数据库")]),s._v(" "),a("h2",{attrs:{id:"数据库的安装和连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的安装和连接"}},[s._v("#")]),s._v(" 数据库的安装和连接")]),s._v(" "),a("h3",{attrs:{id:"pymysql的安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pymysql的安装"}},[s._v("#")]),s._v(" PyMySQL的安装")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pip install PyMySQL\n")])])]),a("h3",{attrs:{id:"python连接数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python连接数据库"}},[s._v("#")]),s._v(" python连接数据库")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import pymysql\n\ndb = pymysql.connect("数据库ip","用户","密码","数据库" ) # 打开数据库连接\ncursor = db.cursor()                                   # 使用 cursor() 方法创建一个游标对象 cursor\ncursor.execute("SELECT VERSION()")                     # 使用 execute() 方法执行 SQL 查询\ndata = cursor.fetchone()                               # 使用 fetchone() 方法获取单条数据\nprint ("Database version : %s " % data)\ndb.close()  \n')])])]),a("h2",{attrs:{id:"创建表操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建表操作"}},[s._v("#")]),s._v(" 创建表操作")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import pymysql\n \n# 打开数据库连接\ndb = pymysql.connect("localhost","testuser","test123","TESTDB" )\n \n# 使用 cursor() 方法创建一个游标对象 cursor\ncursor = db.cursor()\n \n# 使用 execute() 方法执行 SQL，如果表存在则删除\ncursor.execute("DROP TABLE IF EXISTS EMPLOYEE")\n \n# 使用预处理语句创建表\nsql = """CREATE TABLE EMPLOYEE (\n         FIRST_NAME  CHAR(20) NOT NULL,\n         LAST_NAME  CHAR(20),\n         AGE INT,  \n         SEX CHAR(1),\n         INCOME FLOAT )"""\n \ncursor.execute(sql)\n \n# 关闭数据库连接\ndb.close()\n')])])]),a("h2",{attrs:{id:"操作数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作数据"}},[s._v("#")]),s._v(" 操作数据")]),s._v(" "),a("h3",{attrs:{id:"_1-插入操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-插入操作"}},[s._v("#")]),s._v(" 1.插入操作")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import pymysql\n \n# 打开数据库连接\ndb = pymysql.connect("localhost","testuser","test123","TESTDB" )\n \n# 使用cursor()方法获取操作游标 \ncursor = db.cursor()\n \n# SQL 插入语句\nsql = """INSERT INTO EMPLOYEE(FIRST_NAME,\n         LAST_NAME, AGE, SEX, INCOME)\n         VALUES (\'Mac\', \'Mohan\', 20, \'M\', 2000)"""\ntry:\n   cursor.execute(sql) # 执行sql语句\n   db.commit()         # 提交到数据库执行\nexcept:\n   db.rollback()       # 如果发生错误则回滚\n \n# 关闭数据库连接\ndb.close()\n')])])]),a("h3",{attrs:{id:"_2-查询操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-查询操作"}},[s._v("#")]),s._v(" 2.查询操作")]),s._v(" "),a("p",[s._v("Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("fetchone()")]),s._v(": 该方法获取下一个查询结果集。结果集是一个对象")]),s._v(" "),a("li",[a("strong",[s._v("fetchall()")]),s._v(": 接收全部的返回结果行.")]),s._v(" "),a("li",[a("strong",[s._v("rowcount")]),s._v(": 这是一个只读属性，并返回执行execute()方法后影响的行数。")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import pymysql\n \n# 打开数据库连接\ndb = pymysql.connect("localhost","testuser","test123","TESTDB" )\n \n# 使用cursor()方法获取操作游标 \ncursor = db.cursor()\n \n# SQL 查询语句\nsql = "SELECT * FROM EMPLOYEE \\\n       WHERE INCOME > %s" % (1000)\ntry:\n   \n   cursor.execute(sql)# 执行SQL语句\n   results = cursor.fetchall()# 获取所有记录列表\n   for row in results:\n      fname = row[0]\n      lname = row[1]\n      age = row[2]\n      sex = row[3]\n      income = row[4]\n       # 打印结果\n      print ("fname=%s,lname=%s,age=%s,sex=%s,income=%s" % \\\n             (fname, lname, age, sex, income ))\nexcept:\n   print ("Error: unable to fetch data")\n \n# 关闭数据库连接\ndb.close()\n')])])]),a("h3",{attrs:{id:"_3-更新操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-更新操作"}},[s._v("#")]),s._v(" 3.更新操作")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import pymysql\n \n# 打开数据库连接\ndb = pymysql.connect("localhost","testuser","test123","TESTDB" )\n \n# 使用cursor()方法获取操作游标 \ncursor = db.cursor()\n \n# SQL 更新语句\nsql = "UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = \'%c\'" % (\'M\')\ntry:\n   cursor.execute(sql)  # 执行SQL语句\n   db.commit()          # 提交到数据库执行\nexcept\n   db.rollback()        # 发生错误时回滚\n \n# 关闭数据库连接\ndb.close()\n')])])]),a("h3",{attrs:{id:"_4-删除操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除操作"}},[s._v("#")]),s._v(" 4.删除操作")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import pymysql\n \n# 打开数据库连接\ndb = pymysql.connect("localhost","testuser","test123","TESTDB" )\n \n# 使用cursor()方法获取操作游标 \ncursor = db.cursor()\n \n# SQL 删除语句\nsql = "DELETE FROM EMPLOYEE WHERE AGE > %s" % (20)\ntry\n   cursor.execute(sql)  # 执行SQL语句\n   db.commit()          # 提交修改\nexcept\n   db.rollback()        # 发生错误时回滚# 关闭连接\ndb.close()\n')])])]),a("h2",{attrs:{id:"数据备份"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据备份"}},[s._v("#")]),s._v(" 数据备份")]),s._v(" "),a("h3",{attrs:{id:"_1-数据库的逻辑备份"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据库的逻辑备份"}},[s._v("#")]),s._v(" 1.数据库的逻辑备份")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#语法：\n# mysqldump -h 服务器 -u用户名 -p密码 数据库名 > 备份文件.sql\n\n#示例：\n#单库备份\nmysqldump -uroot -p123 db1 > db1.sql\nmysqldump -uroot -p123 db1 table1 table2 > db1-table1-table2.sql\n\n#多库备份\nmysqldump -uroot -p123 --databases db1 db2 mysql db3 > db1_db2_mysql_db3.sql\n\n#备份所有库\nmysqldump -uroot -p123 --all-databases > all.sql \n")])])]),a("h3",{attrs:{id:"_2-数据恢复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据恢复"}},[s._v("#")]),s._v(" 2.数据恢复")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#方法一：\n[root@egon backup]# mysql -uroot -p123 < /backup/all.sql\n\n#方法二：\nmysql> use db1;\nmysql> SET SQL_LOG_BIN=0;   #关闭二进制日志，只对当前session生效\nmysql> source /root/db1.sql\n")])])]),a("h2",{attrs:{id:"事务和锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务和锁"}},[s._v("#")]),s._v(" 事务和锁")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("begin;  # 开启事务\nselect * from emp where id = 1 for update;  # 查询id值，for update添加行锁；\nupdate emp set salary=10000 where id = 1; # 完成更新\ncommit; # 提交事务\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);